{"version":3,"sources":["webpack:///./src/app/trace/ip/ip.module.ts","webpack:///./src/app/trace/ip/ip.page.html","webpack:///./src/app/trace/ip/ip.page.scss","webpack:///./src/app/trace/ip/ip.page.ts"],"names":[],"mappings":"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","file":"trace-ip-ip-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IpPage } from './ip.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IpPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [IpPage]\n})\nexport class IpPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar translucent=\\\"true\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" [text]=\\\"backButtonText\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <ion-label *ngIf=\\\"ipRes\\\">\\n        {{ ip }} {{getCountryFlag(ipRes.country) }} {{ ipRes.city }}, {{ getCountryFullName(ipRes.country) }}\\n      </ion-label>\\n      <ion-label *ngIf=\\\"!ipRes\\\">\\n        <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\n      </ion-label>\\n    </ion-item>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div #map id=\\\"map\\\" class=\\\"map\\\"></div>\\n\\n  <ng-container *ngIf='ipRes'>\\n    <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n      <ion-list-header>\\n        Addresses ({{ ipRes.count }})\\n      </ion-list-header>\\n      <ion-item *ngFor=\\\"let address of addresses\\\" detail=\\\"false\\\"\\n        [routerLink]=\\\"['/trace/' + address.addressType | lowercase, address.address]\\\">\\n        <span class=\\\"risk-score score-{{ address.risk }}\\\"><span>{{ address.risk }}</span></span>\\n        <ion-label>\\n          <h2>{{ address.address }}</h2>\\n          <h3>{{ address.balance }} {{ address.addressType }}\\n            <ng-container *ngIf=\\\"address.entity.name!=='unknown'\\\">\\n              {{ address.entity.name }}\\n            </ng-container>\\n            <ng-container *ngIf=\\\"address.entity.type!=='unknown'\\\">\\n              {{ address.entity.type }}\\n            </ng-container>\\n          </h3>\\n          <p>\\n            {{ formatTimestamp(address.firstSeen) }} â†’ {{ formatTimestamp(address.lastSeen) }}\\n          </p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-infinite-scroll threshold=\\\"100rem\\\" (ionInfinite)=\\\"loadMore($event)\\\"\\n      [disabled]=\\\"infiniteScrollEnabled === false\\\">\\n      <ion-infinite-scroll-content loadingSpinner=\\\"crescent\\\" loadingText=\\\"Loading more addresses...\\\">\\n      </ion-infinite-scroll-content>\\n    </ion-infinite-scroll>\\n  </ng-container>\\n\\n\\n\\n  <ng-container *ngIf=\\\"!ipRes\\\">\\n    <section class=\\\"map\\\">\\n      <ion-skeleton-text animated style=\\\"width: 100%\\\"></ion-skeleton-text>\\n    </section>\\n    <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n      <ion-list-header>\\n        <ion-skeleton-text animated style=\\\"width: 40%\\\"></ion-skeleton-text>\\n      </ion-list-header>\\n      <ion-item detail=\\\"false\\\">\\n        <ion-label>\\n          <h2>\\n            <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\n          </h2>\\n          <h3>\\n            <ion-skeleton-text animated style=\\\"width: 45%\\\"></ion-skeleton-text>\\n          </h3>\\n          <p>\\n            <ion-skeleton-text animated style=\\\"width: 25%\\\"></ion-skeleton-text>\\n          </p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item detail=\\\"false\\\">\\n        <ion-label>\\n          <h2>\\n            <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\n          </h2>\\n          <h3>\\n            <ion-skeleton-text animated style=\\\"width: 25%\\\"></ion-skeleton-text>\\n          </h3>\\n          <p>\\n            <ion-skeleton-text animated style=\\\"width: 35%\\\"></ion-skeleton-text>\\n          </p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item detail=\\\"false\\\">\\n        <ion-label>\\n          <h2>\\n            <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\n          </h2>\\n          <h3>\\n            <ion-skeleton-text animated style=\\\"width: 45%\\\"></ion-skeleton-text>\\n          </h3>\\n          <p>\\n            <ion-skeleton-text animated style=\\\"width: 25%\\\"></ion-skeleton-text>\\n          </p>\\n        </ion-label>\\n      </ion-item>\\n    </ion-list>\\n  </ng-container>\\n\\n</ion-content>\"","module.exports = \".map {\\n  width: 100%;\\n  height: 45vh; }\\n  .map:empty {\\n    display: none; }\\n  ion-label h2,\\nion-label h3 {\\n  overflow: inherit;\\n  text-overflow: inherit; }\\n  ion-label p {\\n  white-space: normal; }\\n  .risk-score {\\n  margin: 0 1rem 0 0;\\n  border-radius: 50%;\\n  height: 24px;\\n  width: 24px;\\n  text-align: center;\\n  border: 3px solid #ccc;\\n  font-size: .9rem;\\n  letter-spacing: -2px;\\n  display: flex; }\\n  .risk-score > span {\\n    width: 90%; }\\n  .risk-score.score-10, .risk-score.score-9, .risk-score.score-8 {\\n    border-color: var(--ion-color-danger);\\n    color: var(--ion-color-danger); }\\n  .risk-score.score-5, .risk-score.score-4 {\\n    border-color: var(--ion-color-warning);\\n    color: var(--ion-color-warning); }\\n  .risk-score.score-2, .risk-score.score-1 {\\n    border-color: var(--ion-color-success);\\n    color: var(--ion-color-success); }\\n  .risk-score.score-0 {\\n    border-color: var(--ion-color-medium);\\n    color: var(--ion-color-medium); }\\n  ion-button[disabled] {\\n  display: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mMXZsYWRjdG1iL2dpdC9DaXBoZXJUcmFjZUZpZWxkQXBwL3NyYy9hcHAvdHJhY2UvaXAvaXAucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLFlBQVksRUFBQTtFQUZoQjtJQUtRLGFBQWEsRUFBQTtFQUlyQjs7RUFHUSxpQkFBaUI7RUFDakIsc0JBQXNCLEVBQUE7RUFKOUI7RUFRUSxtQkFBbUIsRUFBQTtFQUkzQjtFQUNJLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixvQkFBb0I7RUFDcEIsYUFBYSxFQUFBO0VBVGpCO0lBWVEsVUFBVSxFQUFBO0VBWmxCO0lBb0JZLHFDQUFxQztJQUNyQyw4QkFBOEIsRUFBQTtFQXJCMUM7SUEwQlksc0NBQXNDO0lBQ3RDLCtCQUErQixFQUFBO0VBM0IzQztJQWdDWSxzQ0FBc0M7SUFDdEMsK0JBQStCLEVBQUE7RUFqQzNDO0lBcUNZLHFDQUFxQztJQUNyQyw4QkFBOEIsRUFBQTtFQUsxQztFQUNJLGFBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3RyYWNlL2lwL2lwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogNDV2aDtcblxuICAgICY6ZW1wdHkge1xuICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgIH1cbn1cblxuaW9uLWxhYmVsIHtcbiAgICBoMixcbiAgICBoM3tcbiAgICAgICAgb3ZlcmZsb3c6IGluaGVyaXQ7XG4gICAgICAgIHRleHQtb3ZlcmZsb3c6IGluaGVyaXQ7XG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gICAgfVxufVxuXG4ucmlzay1zY29yZSB7XG4gICAgbWFyZ2luOiAwIDFyZW0gMCAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogM3B4IHNvbGlkICNjY2M7XG4gICAgZm9udC1zaXplOiAuOXJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgPiBzcGFuIHtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG5cbiAgICAmLnNjb3JlIHtcblxuICAgICAgICAmLTEwLFxuICAgICAgICAmLTksXG4gICAgICAgICYtOCB7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi01LFxuICAgICAgICAmLTQge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itd2FybmluZyk7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi0yLFxuICAgICAgICAmLTEgIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtMCAge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuaW9uLWJ1dHRvbltkaXNhYmxlZF0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG59Il19 */\"","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TraceService } from '../../services/trace.service';\nimport { Ip } from '../../models/ip';\nimport { Storage } from '@ionic/storage';\nimport { environment } from '../../../environments/environment';\nimport _get from 'lodash/get';\nimport * as moment from 'moment';\nimport * as flag from 'country-code-emoji';\nimport * as countryCodeLookup from 'country-code-lookup';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\ndeclare var google;\n\n@Component({\n  selector: 'app-ip',\n  templateUrl: './ip.page.html',\n  styleUrls: ['./ip.page.scss'],\n})\nexport class IpPage implements OnInit {\n  @ViewChild('map') mapElement: ElementRef;\n  ip: string;\n  ipRes: Ip;\n  backButtonText = '';\n  traceHistory: any;\n  map: any;\n  addresses: any;\n  addressesOffset: number;\n  infiniteLoadCount: any;\n  infiniteScrollEnabled: boolean = false;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private traceService: TraceService,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if(!paramMap.has('ip')) {\n        return;\n      }\n\n      this.ip = paramMap.get('ip');\n      this.fetchData(this.ip, undefined);\n    });\n\n    this.addTraceHistory(this.ip);\n  }\n\n  fetchData(ip: string, offset: number) {\n    this.traceService.fetchIp(ip, undefined).toPromise().then(res => {\n      this.ipRes = res;\n      this.buildMap(res.latitude, res.longitude);\n      this.addresses = res['records'];\n\n      // Enable infinite scroll\n      this.infiniteScrollEnabled = (res['nextOffset'] !== -1);\n\n      this.addressesOffset = res.nextOffset;\n    });\n  }\n\n  loadMore(event) {\n    this.traceService.fetchIp(this.ip, this.addressesOffset).toPromise().then(res => {\n      res.records.forEach(record => this.addresses.push(record));\n\n      // When no addresses left to load, disable infinite scroll\n      if(res.nextOffset === -1) {\n        this.infiniteScrollEnabled = false;\n      }\n\n      this.addressesOffset = res.nextOffset;\n      event.target.complete();\n    });\n  }\n\n  formatTimestamp(timestamp) {\n    return moment(timestamp * 1000).format('ll LTS');\n  }\n\n  getCountryFlag(country) {\n    return flag(country);\n  }\n\n  getCountryFullName(country) {\n    return countryCodeLookup.byIso(country).country;\n  }\n\n  buildMap(lat, lon) {\n    let latLon = new google.maps.LatLng(lat, lon);\n\n    let mapOpts = {\n      center: latLon,\n      zoom: 15\n    }\n\n    this.map = new google.maps.Map(this.mapElement.nativeElement, mapOpts);\n  }\n\n  addTraceHistory(ip: string) {\n    // Note: this method will be refactored in https://chopchop.atlassian.net/browse/ENG-815\n    let newVal = [];\n\n    this.storage.get('trace_history').then(val => {\n      if(val) {\n        newVal = val;\n        newVal.push({ hash: ip, coinType: 'ip', score: undefined });\n\n        // restrict trace history to 100\n        while(newVal.length > 100) {\n          newVal.shift();\n        }\n        this.storage.set('trace_history', newVal);\n      }\n    });\n  }\n\n}\n"],"sourceRoot":""}