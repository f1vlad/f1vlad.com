{"version":3,"sources":["webpack:///./src/app/trace/coin/eth/eth.module.ts","webpack:///./src/app/trace/coin/eth/eth.page.html","webpack:///./src/app/trace/coin/eth/eth.page.scss","webpack:///./src/app/trace/coin/eth/eth.page.ts"],"names":[],"mappings":"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","file":"trace-coin-eth-eth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EthPage } from './eth.page';\n\nimport { SharedModule } from '../../../components/shared-module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EthPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [EthPage]\n})\nexport class EthPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar translucent=\\\"true\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" [text]=\\\"backButtonText\\\"></ion-back-button>\\n    </ion-buttons>\\n    <ion-item lines=\\\"none\\\" color=\\\"transparent\\\">\\n      <ion-label *ngIf=\\\"transactions\\\">\\n        {{ hash }}\\n      </ion-label>\\n      <ion-label *ngIf=\\\"!transactions\\\">\\n        <ion-skeleton-text animated style=\\\"width: 90%\\\"></ion-skeleton-text>\\n      </ion-label>\\n    </ion-item>\\n    <ion-buttons *ngIf=\\\"transactions\\\" slot=\\\"primary\\\">\\n      <ion-button (click)=\\\"presentAddPopover()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"add\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <app-coin-view\\n    [hash]=\\\"hash\\\"\\n    [coinScore]=\\\"coinScore\\\"\\n    [transactions]=\\\"transactions\\\"\\n    [owner]=\\\"owner\\\"\\n    [walletId]=\\\"\\\"\\n    coinType=\\\"eth\\\"\\n    [writableCases]=\\\"writableCases\\\"\\n    [availableCases]=\\\"availableCases\\\"\\n    [countryFlag]=\\\"countryFlag\\\"\\n    [countryFullName]=\\\"countryFullName\\\"\\n  ></app-coin-view>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RyYWNlL2NvaW4vZXRoL2V0aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { TraceService } from '../../../services/trace.service';\nimport { CoinScore } from '../../../models/coin-score';\nimport { Transactions } from '../../../models/transactions';\nimport { CaseService } from 'src/app/services/case.service';\nimport { AddressAddComponent } from '../../../components/address-add/address-add.component';\nimport { PopoverController } from '@ionic/angular';\nimport * as flag from 'country-code-emoji';\nimport * as countryCodeLookup from 'country-code-lookup';\nimport _get from 'lodash/get';\nimport _has from 'lodash/get';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-eth',\n  templateUrl: './eth.page.html',\n  styleUrls: ['./eth.page.scss'],\n})\nexport class EthPage implements OnInit {\n  hash: string;\n  coinScore: CoinScore;\n  transactions: Transactions;\n  owner: object;\n  walletId: string;\n  availableCases: any;\n  countryFlag: any;\n  countryFullName: any;\n  backButtonText = '';\n\n  // Temporary dev\n  writableCaseId: string;\n  writableCases: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private traceService: TraceService,\n    private caseService: CaseService,\n    public popoverController: PopoverController,\n    public toastController: ToastController\n  ) { }\n\n  ngOnInit() {\n    this.activatedRoute.paramMap.subscribe(paramMap => {\n      if(!paramMap.has('hash')) {\n        return;\n      }\n\n      this.hash = paramMap.get('hash');\n      this.fetchData(this.hash);\n    })\n  }\n\n  async fetchData(hash: string) {\n    return await Promise.all([\n      this.fetchScore(hash),\n      this.fetchTransactions(),\n      this.fetchCases()\n    ]);\n\n  }\n\n  async fetchScore(hash) {\n    await this.traceService.fetchCoinScore(hash, 'eth').toPromise().then(res => {\n      this.coinScore = res;\n    })\n    .catch(err => {\n      console.error(`Error: ${err}`);\n    });\n  }\n\n  async fetchTransactions() {\n    await this.traceService.fetchCoinTransactions(this.hash, 'eth').toPromise().then(res => {\n      this.transactions = _get(res, 'summary', undefined);\n      this.owner = _get(res, `wallets[${this.hash}].owner`, undefined);\n\n      this.countryFlag = _has(res, `wallets[${this.hash}].owner.country`) && flag(_get(res, `wallets[${this.hash}].owner.country`, undefined));\n      this.countryFullName = _has(res, `wallets[${this.hash}].owner.country`) && countryCodeLookup.byInternet(_get(res, `wallets[${this.hash}].owner.country`, undefined));\n\n      const seen = new Set();\n      const cases = _get(res, 'cases', undefined);\n\n      this.availableCases = cases[this.hash].filter(item => {\n        const duplicate = seen.has(item.caseId);\n        seen.add(item.caseId);\n        const shouldShow = (item.isOwner === true || item.isShared === true) && !duplicate;\n        return shouldShow;\n      });\n    });\n  }\n\n  async fetchCases() {\n    await this.caseService.fetchCases().toPromise().then(res => {\n      this.writableCases = res.filter(item => {\n        return item.writeEnabled === true;\n      })\n    })\n  }\n\n  async presentAddPopover(ev: any) {\n    const popover = await this.popoverController.create({\n      component: AddressAddComponent,\n      componentProps: {\n        address: this.hash,\n        coinType: 'eth',\n        writableCases: this.writableCases\n      },\n      event: ev,\n      translucent: true,\n    });\n\n    popover.onDidDismiss().then(data => {\n      if(_has(data, 'data') && data.data === true) {\n        this.presentToast();\n        this.fetchTransactions();\n      }\n    });\n\n    return await popover.present();\n  }\n\n  async presentToast() {\n    const toast = await this.toastController.create({\n      // message: `You successfully added this address to case ${this.caseId.value}.`,\n      message: `You successfully added this address.`,\n      duration: 3000\n    });\n\n    toast.present();\n  }\n}\n"],"sourceRoot":""}