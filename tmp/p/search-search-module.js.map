{"version":3,"sources":["webpack:///./src/app/search/search-results/search-results.component.html","webpack:///./src/app/search/search-results/search-results.component.scss","webpack:///./src/app/search/search-results/search-results.component.ts","webpack:///./src/app/search/search.module.ts","webpack:///./src/app/search/search.page.html","webpack:///./src/app/search/search.page.scss","webpack:///./src/app/search/search.page.ts"],"names":[],"mappings":"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","file":"search-search-module.js","sourcesContent":["module.exports = \"<ion-text\\n  *ngIf=\\\"hash && BTCaddresses?.length === 0\\n    && BCHaddresses?.length === 0\\n    && ETHaddresses?.length === 0\\n    && IPaddresses?.length === 0\\n    && LTCaddresses?.length === 0\\n  \\\"\\n  style=\\\"display: inline-block; padding: 1rem; color: var(--ion-color-danger-tint)\\\"\\n>\\n  The value you entered is not a valid address<!-- or transaction ID-->.\\n</ion-text>\\n\\n<ion-card *ngIf=\\\"BTCaddresses && BTCaddresses.length > 0 && hash\\\">\\n  <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n    <ion-list-header>Trace BTC Addresses</ion-list-header>\\n    <ion-item *ngFor=\\\"let hash of BTCaddresses\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"typeahead-item\\\" [routerLink]=\\\"['/trace/btc', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\"></ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<ion-card *ngIf=\\\"BCHaddresses && BCHaddresses.length > 0 && hash\\\">\\n  <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n    <ion-list-header>Trace BCH Addresses</ion-list-header>\\n    <ion-item *ngFor=\\\"let hash of BCHaddresses\\\" lines=\\\"none\\\">\\n      <ion-label class=\\\"typeahead-item\\\" [routerLink]=\\\"['/trace/bch', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\"></ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<!-- <ion-card *ngIf=\\\"BTCtransactions && BTCtransactions.length > 0 && hash\\\" >\\n<ion-list lines=\\\"full\\\">\\n  <ion-list-header>Trace BTC Transactions</ion-list-header>\\n  <ion-list-header><small style=\\\"color: var(--ion-color-danger)\\\">experimental, won't be in first version</small></ion-list-header>\\n  <ion-item *ngFor=\\\"let hash of BTCtransactions\\\" color='transparent' lines='none'>\\n    <ion-label [routerLink]=\\\"['/trace/transaction', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\">{{ hash }}</ion-label>\\n  </ion-item>\\n</ion-list>\\n</ion-card> -->\\n\\n<ion-card *ngIf=\\\"ETHaddresses && ETHaddresses.length > 0 && hash\\\">\\n  <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n    <ion-list-header>Trace ETH Addresses</ion-list-header>\\n    <ion-item *ngFor=\\\"let hash of ETHaddresses\\\" color='transparent' lines='none'>\\n      <ion-label class=\\\"typeahead-item\\\" [routerLink]=\\\"['/trace/eth', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\">{{ hash }}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<ion-card *ngIf=\\\"IPaddresses && IPaddresses.length > 0 && hash\\\">\\n  <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n    <ion-list-header>IPv4 Addresses</ion-list-header>\\n    <ion-item *ngFor=\\\"let hash of IPaddresses\\\" color='transparent' lines='none'>\\n      <ion-label class=\\\"typeahead-item\\\" [routerLink]=\\\"['/trace/ip', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\">{{ hash }}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<ion-card *ngIf=\\\"LTCaddresses && LTCaddresses.length > 0 && hash\\\">\\n  <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n    <ion-list-header>Trace LTC Addresses</ion-list-header>\\n    <ion-item *ngFor=\\\"let hash of LTCaddresses\\\" color='transparent' lines='none'>\\n      <ion-label [routerLink]=\\\"['/trace/ltc', hash]\\\" [innerHTML]=\\\"highlight(hash, this.searchTerm)\\\">{{ hash }}</ion-label>\\n    </ion-item>\\n  </ion-list>\\n</ion-card>\\n\\n<span *ngIf=\\\"!hash\\\">\\n  <ion-text\\n    style=\\\"display: inline-block; padding: 10px 26px\\\"\\n  >\\n      Type or paste a BTC, BCH, ETH, LTC or IP address<!-- or transaction ID in a search box above-->.\\n  </ion-text>\\n  <ion-card *ngIf=\\\"traceHistory\\\">\\n    <ion-list-header>\\n      Trace history\\n    </ion-list-header>\\n    <ion-list color=\\\"transparent\\\" lines=\\\"none\\\">\\n      <div *ngFor=\\\"let th of traceHistory\\\">\\n        <ion-item color='transparent' lines='none'>\\n          <ion-label [routerLink]=\\\"['/trace/' + th.coinType, th.hash]\\\">{{ th.hash }}</ion-label>\\n          <span><small style=\\\"margin: 0 .5rem; text-transform: uppercase\\\">{{ th.coinType }}</small></span>\\n          <span *ngIf=\\\"th.score\\\" class=\\\"risk-score score-{{ th.score }}\\\"\\n            style=\\\"\\n\\n            \\\"\\n          ><span>{{ th.score }}</span></span>\\n        </ion-item>\\n      </div>\\n    </ion-list>\\n  </ion-card>\\n<span>\\n\"","module.exports = \".risk-score {\\n  border-radius: 50%;\\n  height: 24px;\\n  width: 24px;\\n  text-align: center;\\n  border: 3px solid #ccc;\\n  font-size: .9rem;\\n  letter-spacing: -2px;\\n  display: flex; }\\n  .risk-score > span {\\n    width: 90%; }\\n  .risk-score.score-10, .risk-score.score-9, .risk-score.score-8 {\\n    border-color: var(--ion-color-danger);\\n    color: var(--ion-color-danger); }\\n  .risk-score.score-5, .risk-score.score-4 {\\n    border-color: var(--ion-color-warning);\\n    color: var(--ion-color-warning); }\\n  .risk-score.score-2, .risk-score.score-1 {\\n    border-color: var(--ion-color-success);\\n    color: var(--ion-color-success); }\\n  .risk-score.score-0 {\\n    border-color: var(--ion-color-medium);\\n    color: var(--ion-color-medium); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mMXZsYWRjdG1iL2dpdC9DaXBoZXJUcmFjZUZpZWxkQXBwL3NyYy9hcHAvc2VhcmNoL3NlYXJjaC1yZXN1bHRzL3NlYXJjaC1yZXN1bHRzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUksa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWixXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLHNCQUFzQjtFQUN0QixnQkFBZ0I7RUFDaEIsb0JBQW9CO0VBQ3BCLGFBQWEsRUFBQTtFQVRqQjtJQVlRLFVBQVUsRUFBQTtFQVpsQjtJQW9CWSxxQ0FBcUM7SUFDckMsOEJBQThCLEVBQUE7RUFyQjFDO0lBMEJZLHNDQUFzQztJQUN0QywrQkFBK0IsRUFBQTtFQTNCM0M7SUFnQ1ksc0NBQXNDO0lBQ3RDLCtCQUErQixFQUFBO0VBakMzQztJQXFDWSxxQ0FBcUM7SUFDckMsOEJBQThCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zZWFyY2gvc2VhcmNoLXJlc3VsdHMvc2VhcmNoLXJlc3VsdHMuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucmlzay1zY29yZSB7XG4gICAgLy8gZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gICAgd2lkdGg6IDI0cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGJvcmRlcjogM3B4IHNvbGlkICNjY2M7XG4gICAgZm9udC1zaXplOiAuOXJlbTtcbiAgICBsZXR0ZXItc3BhY2luZzogLTJweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuXG4gICAgPiBzcGFuIHtcbiAgICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG5cbiAgICAmLnNjb3JlIHtcblxuICAgICAgICAmLTEwLFxuICAgICAgICAmLTksXG4gICAgICAgICYtOCB7XG4gICAgICAgICAgICBib3JkZXItY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1kYW5nZXIpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi01LFxuICAgICAgICAmLTQge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pb24tY29sb3Itd2FybmluZyk7XG4gICAgICAgICAgICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXdhcm5pbmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgJi0yLFxuICAgICAgICAmLTEgIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogdmFyKC0taW9uLWNvbG9yLXN1Y2Nlc3MpO1xuICAgICAgICAgICAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zdWNjZXNzKTtcbiAgICAgICAgfVxuXG4gICAgICAgICYtMCAge1xuICAgICAgICAgICAgYm9yZGVyLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICAgICAgICAgIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItbWVkaXVtKTtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.scss'],\n})\nexport class SearchResultsComponent implements OnInit {\n  @Input() hash: null;\n  @Input() searchTerm;\n  @Input() BTCaddresses: [];\n  @Input() BCHaddresses: [];\n  @Input() BTCtransactions: [];\n  @Input() ETHaddresses: [];\n  @Input() IPaddresses: [];\n  @Input() LTCaddresses: [];\n  @Input() traceHistory;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.searchTerm = this.hash;\n  }\n\n  highlight(hash, searchTerm) {\n    // match first occurance, case incensitive\n    return hash.replace(new RegExp(searchTerm, \"i\"), match => {\n        return '<span class=\"highlight\">' + match + '</span>';\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SharedModule } from '../components/shared-module';\n\nimport { SearchPage } from './search.page';\nimport { SearchResultsComponent } from './search-results/search-results.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SearchPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [SearchPage, SearchResultsComponent]\n})\nexport class SearchPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar translucent=\\\"true\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button class=\\\"halo-burger\\\">\\n        <img src='assets/halo-burger.svg'>\\n      </ion-menu-button>\\n    </ion-buttons>\\n    <ion-searchbar animated debounce=\\\"500\\\" (keyup)=\\\"hashTypeahead(search.value)\\\" #search></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <app-search-results\\n    [searchTerm]=\\\"this.searchTerm\\\"\\n    [hash]=\\\"this.hash\\\"\\n    [BTCaddresses]=\\\"this.BTCaddresses\\\"\\n    [ETHaddresses]=\\\"this.ETHaddresses\\\"\\n    [BTCtransactions]=\\\"this.BTCtransactions\\\"\\n    [BCHaddresses]=\\\"this.BCHaddresses\\\"\\n    [LTCaddresses]=\\\"this.LTCaddresses\\\"\\n    [IPaddresses]=\\\"this.IPaddresses\\\"\\n    [traceHistory]=\\\"this.traceHistory\\\"\\n  ></app-search-results>\\n\\n  <app-search-results-skeleton *ngIf=\\\"hash && (!BTCaddresses || !BTCtransactions || !ETHaddresses)\\\"></app-search-results-skeleton>\\n\\n</ion-content>\\n\"","module.exports = \"ion-menu-button.halo-burger {\\n  --padding-end: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9mMXZsYWRjdG1iL2dpdC9DaXBoZXJUcmFjZUZpZWxkQXBwL3NyYy9hcHAvc2VhcmNoL3NlYXJjaC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxnQkFBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2VhcmNoL3NlYXJjaC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tbWVudS1idXR0b24uaGFsby1idXJnZXIge1xuICAgIC0tcGFkZGluZy1lbmQ6IDA7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { TraceService } from '../services/trace.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.page.html',\n  styleUrls: ['./search.page.scss'],\n})\n\nexport class SearchPage implements OnInit {\n  hash: string = undefined;\n  searchTerm: string = undefined;\n  BTCaddresses: any[] = undefined;\n  BTCtransactions: any[] = undefined;\n  ETHaddresses: any[] = undefined;\n  LTCaddresses: any[] = undefined;\n  BCHaddresses: any[] = undefined;\n  IPaddresses: any[] = undefined;\n  traceHistory: any = undefined;\n\n  constructor(\n    private traceService: TraceService,\n    private authenticationService: AuthenticationService,\n    private router: Router,\n    private storage: Storage\n  ) { }\n\n  ngOnInit() {\n    this.getTraceHistory();\n  }\n\n  traceHash(hash) {\n    this.traceService.searchHash(hash).toPromise().then(res => {\n        this.BTCaddresses = res['results']['btc_addr'];\n        this.BTCtransactions = res['results']['btc_tx'];\n        this.ETHaddresses = res['results']['eth_addr'];\n        this.BCHaddresses = res['results']['bch_addr'];\n        this.LTCaddresses = res['results']['ltc_addr'];\n        this.IPaddresses = res['results']['ip'];\n      }\n    ).catch(err => {\n      switch(err.split(':')[0]) {\n\n        // ❗❗❗below switching stuff needs to reside on ctbase service level not here.\n\n        // Bad request response, e.g. ../api/v1/search?q=1[[$&types=all\n        case '400':\n        case '500':\n          // imitate no results to show that address entered is invalid\n          this.BTCaddresses = this.BTCtransactions = this.BCHaddresses = this.ETHaddresses = [];\n          break;\n\n        // Unauthorized response, happens when app has been open a while\n        // and session with API has expired\n        case '401':\n          this.authenticationService.logout();\n          this.router.navigateByUrl('/login');\n          break;\n      }\n    });\n  }\n\n  getTraceHistory() {\n    this.storage.get('trace_history').then((val) => {\n      // console.log(val)\n      // debugger\n      // this.traceHistory = JSON.stringify(val);\n      this.traceHistory = val.reverse();\n    });\n  }\n\n  hashTypeahead(hash) {\n    !!hash && this.traceHash(hash); // TODO: probably want to debounce this event\n    this.hash = hash;\n    this.searchTerm = hash;\n    this.BTCaddresses = this.BCHaddresses = this.BTCtransactions = this.ETHaddresses = this.IPaddresses = undefined;\n  }\n}\n"],"sourceRoot":""}