{"version":3,"sources":["webpack:///./src/app/item-add/item-add.module.ts","webpack:///./src/app/item-add/item-add.page.html","webpack:///./src/app/item-add/item-add.page.scss","webpack:///./src/app/item-add/item-add.page.ts"],"names":[],"mappings":"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","file":"item-add-item-add-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { SharedModule } from '../components/shared-module';\nimport { ItemAddPage } from './item-add.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ItemAddPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [ItemAddPage]\n})\nexport class ItemAddPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar translucent=\\\"true\\\" color=\\\"transparent\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/\\\" [icon]=\\\"buttonIcon\\\" [text]=\\\"buttonText\\\">\\n      </ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <app-logo></app-logo>\\n      &nbsp;\\n      New precious metal\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <form [formGroup]=\\\"newItemFormGroup\\\">\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Title <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"title\\\" autocapitalize></ion-input>\\n      </ion-item>\\n      <ion-item *ngIf=\\\"title.hasError('required') && title.touched\\\">\\n        <span>* This field is required</span>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Type</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"type\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Form</ion-label>\\n        <ion-textarea formControlName=\\\"form\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Weight</ion-label>\\n        <ion-textarea formControlName=\\\"weight\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Purity</ion-label>\\n        <ion-textarea formControlName=\\\"purity\\\"></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Notes</ion-label>\\n        <ion-textarea formControlName=\\\"notes\\\" auto-grow=\\\"true\\\" autocapitalize></ion-textarea>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Photo</ion-label>\\n        <img [src]=\\\"currentImage\\\" *ngIf=\\\"currentImage\\\">\\n        <ion-fab>\\n          <ion-fab-button (click)=\\\"takePicture()\\\">\\n            <ion-ripple-effect></ion-ripple-effect>\\n            <ion-icon name=\\\"camera\\\"></ion-icon>\\n          </ion-fab-button>\\n        </ion-fab>        \\n      </ion-item>\\n    </ion-list>\\n\\n    <div class=\\\"ion-padding\\\">\\n      <ion-button\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        class=\\\"ion-no-margin\\\"\\n        [disabled]=\\\"!newItemFormGroup.valid\\\"\\n        (click)=\\\"onSubmit()\\\"\\n      >\\n        <ion-ripple-effect></ion-ripple-effect>\\n        Add\\n      </ion-button>\\n    </div>\\n  </form>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2l0ZW0tYWRkL2l0ZW0tYWRkLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { FormBuilder, FormGroup, Validators, AbstractControl, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-item-add',\n  templateUrl: './item-add.page.html',\n  styleUrls: ['./item-add.page.scss'],\n})\nexport class ItemAddPage implements OnInit {\n  buttonIcon: any;\n  buttonText: any;\n  currentImage: any;\n\n  newItemFormGroup: FormGroup;\n\n  title: AbstractControl;\n  type: AbstractControl;\n  form: AbstractControl;\n  weight: AbstractControl;\n  purity: AbstractControl;\n  notes: AbstractControl;\n\n  constructor(\n    private camera: Camera,\n    private formBuilder: FormBuilder,\n    private router: Router\n  ) {\n    this.newItemFormGroup = formBuilder.group({\n      title: ['', Validators.required],\n      type: [],\n      form: [],\n      weight: [],\n      purity: [],\n      notes: [],\n    });\n\n    this.title = this.newItemFormGroup.controls['title'];\n    this.type = this.newItemFormGroup.controls['type'];\n    this.form = this.newItemFormGroup.controls['form'];\n    this.weight = this.newItemFormGroup.controls['weight'];\n    this.purity = this.newItemFormGroup.controls['purity'];\n    this.notes = this.newItemFormGroup.controls['notes'];\n  }\n\n  ngOnInit() {\n    this.buttonIcon = 'close';\n    this.buttonText = '';\n  }\n\n  onSave() {\n    this.onSubmit();\n  }\n\n  onSubmit() {\n    const data = {\n      title: this.title.value,\n      type: this.type.value,\n      form: this.form.value,\n      weight: this.weight.value,\n      purity: this.purity.value,\n      notes: this.notes.value\n    }\n    // console.log(`submitting`, data);\n\n    // after successful submit we route user back to list view:\n    this.router.navigate(['/']);\n  }\n\n  takePicture() {\n    const options: CameraOptions = {\n      quality: 100,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.JPEG,\n      mediaType: this.camera.MediaType.PICTURE\n    }\n\n    this.camera.getPicture(options).then((imageData) => {\n      this.currentImage = 'data:image/jpeg;base64,' + imageData;\n    }, (err) => {\n      // Handle error\n      // console.log(`Camera issue: ${err}`);\n    });\n  }\n\n}\n"],"sourceRoot":""}